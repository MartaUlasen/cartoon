{"version":3,"sources":["store/characterList/index.jsx","components/characterCard/index.jsx","components/errorMessage/index.jsx","components/characterList/index.jsx","store/character/index.jsx","components/character/index.jsx","components/app/index.jsx","store/characterList/sagas.jsx","store/character/sagas.jsx","store/saga.js","store/reducer.js","store/index.jsx","index.jsx"],"names":["initialState","loading","data","undefined","error","next","characterListModule","createSlice","name","reducers","requestCharacterList","state","requestCharacterListSuccess","action","payload","results","info","requestCharacterListError","actions","reducer","CharacterCard","status","species","gender","image","location","statusClass","classNames","card__status","className","src","alt","ErrorMessage","mapDispatchToProps","connect","characterList","loaderRef","useRef","loadMoreCharacters","useCallback","entries","isIntersecting","useEffect","observerTarget","current","observer","IntersectionObserver","root","rootMargin","threshold","observe","unobserve","map","character","href","path","url","split","filter","v","pop","key","id","to","type","onClick","ref","size","characterModule","requestCharacter","requestCharacterSuccess","requestCharacterError","data-testid","App","exact","component","CharacterList","render","match","params","fetchCharacterListWorker","fetchCharacterListWatcher","call","axios","get","result","put","toString","takeLeading","fetchCharacterWorker","fetchCharacterWatcher","takeLatest","rootSaga","all","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","store","configureStore","rootReducer","run","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.5e5de164.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: undefined,\r\n    error: undefined,\r\n    next: 'https://rickandmortyapi.com/api/character',\r\n};\r\n\r\nconst characterListModule = createSlice({\r\n    name: 'charactersList',\r\n    initialState,\r\n    reducers: {\r\n        requestCharacterList: (state) => {\r\n            state.loading = true;\r\n            state.error = undefined;\r\n        },\r\n        requestCharacterListSuccess: (state, action) => {\r\n            state.loading = false;\r\n            state.data = state.data === undefined\r\n                ? action.payload.results\r\n                : [...state.data, ...action.payload.results];\r\n            state.next = action.payload.info.next;\r\n        },\r\n        requestCharacterListError: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { actions, reducer } = characterListModule;\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './index.scss';\r\n\r\nconst CharacterCard = ({\r\n    data: {\r\n        name, status, species, gender, image, location,\r\n    } = {},\r\n}) => {\r\n    const statusClass = classNames({\r\n        card__status: true,\r\n        'card__status--alive': status === 'Alive',\r\n        'card__status--dead': status === 'Dead',\r\n    });\r\n\r\n    return (\r\n        <div className='card'>\r\n            <img className='card__img' src={image} alt={name} />\r\n            <div className='card__description'>\r\n                <h5 className='card__name'>{name}</h5>\r\n                <div className={statusClass}>{status}</div>\r\n                <div className='card__additional'>\r\n                    <div className='card__additional-title'>Species:</div>\r\n                    <div className='card__additional-value'>{species}</div>\r\n                </div>\r\n                <div className='card__additional'>\r\n                    <div className='card__additional-title'>Gender:</div>\r\n                    <div className='card__additional-value'>{gender}</div>\r\n                </div>\r\n                <div className='card__additional'>\r\n                    <div className='card__additional-title'>Location:</div>\r\n                    <div className='card__additional-value'>{location?.name}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst ErrorMessage = ({\r\n    error,\r\n}) => (\r\n    <div className='error'>{error}</div>\r\n);\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { actions } from 'store/characterList';\r\nimport CharacterCard from 'components/characterCard';\r\nimport ErrorMessage from 'components/errorMessage';\r\nimport { Loader } from 'react-feather';\r\nimport './index.scss';\r\n\r\nconst getHrefId = (href) => href?.split('/').filter((v) => v).pop();\r\n\r\nconst CharacterList = ({\r\n    loading,\r\n    data,\r\n    error,\r\n    next,\r\n    requestCharacterList,\r\n}) => {\r\n    const loaderRef = useRef(null);\r\n\r\n    const loadMoreCharacters = useCallback((entries) => {\r\n        const target = entries[0];\r\n        if (target.isIntersecting && next) {\r\n            requestCharacterList(next);\r\n        }\r\n    }, [next, requestCharacterList]);\r\n\r\n    useEffect(() => {\r\n        const observerTarget = loaderRef.current;\r\n\r\n        const observer = new IntersectionObserver(loadMoreCharacters, {\r\n            root: null,\r\n            rootMargin: '0px',\r\n            threshold: 0.2,\r\n        });\r\n\r\n        if (loaderRef && observerTarget) {\r\n            observer.observe(observerTarget);\r\n        }\r\n\r\n        return () => observer.unobserve(observerTarget);\r\n    }, [loaderRef, loadMoreCharacters]);\r\n\r\n    const loadNextCharacters = () => {\r\n        if (next) {\r\n            requestCharacterList(next);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {data?.map(\r\n                    (character) => {\r\n                        const path = `/characters/${getHrefId(character.url)}`;\r\n                        return (\r\n                            <Link key={character.id} to={path} className='card-link'>\r\n                                <CharacterCard data={character} />\r\n                            </Link>\r\n                        );\r\n                    }\r\n                )}\r\n                {error && <ErrorMessage error={error} />}\r\n                {error\r\n                && next\r\n                && (\r\n                    <button\r\n                        className='button-load-more'\r\n                        type='button'\r\n                        onClick={loadNextCharacters}\r\n                    >\r\n                        Load more characters\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <div ref={loaderRef}>{loading && <Loader className='icon-loading' size={20} />}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ characterList }) => ({\r\n    loading: characterList.loading,\r\n    data: characterList.data,\r\n    error: characterList.error,\r\n    next: characterList.next,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    requestCharacterList: actions.requestCharacterList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterList);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: undefined,\r\n    error: undefined,\r\n};\r\n\r\nconst characterModule = createSlice({\r\n    name: 'charactersList',\r\n    initialState,\r\n    reducers: {\r\n        requestCharacter: (state) => {\r\n            state.loading = true;\r\n            state.data = undefined;\r\n            state.error = undefined;\r\n        },\r\n        requestCharacterSuccess: (state, action) => {\r\n            state.loading = false;\r\n            state.data = action.payload;\r\n        },\r\n        requestCharacterError: (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { actions, reducer } = characterModule;\r\n\r\nexport default reducer;\r\n","import React, { useEffect } from 'react';\r\nimport { actions } from 'store/character';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from 'react-feather';\r\nimport CharacterCard from 'components/characterCard';\r\nimport ErrorMessage from 'components/errorMessage';\r\n\r\nexport const Character = ({\r\n    id,\r\n    loading,\r\n    data,\r\n    error,\r\n    requestCharacter,\r\n}) => {\r\n    useEffect(() => {\r\n        requestCharacter(`https://rickandmortyapi.com/api/character/${id}`);\r\n    }, [requestCharacter, id]);\r\n\r\n    return (\r\n        <>\r\n            {error && <ErrorMessage error={error} />}\r\n            {loading\r\n                ? (\r\n                    <Loader\r\n                        className='icon-loading'\r\n                        size={20}\r\n                        data-testid='loader'\r\n                    />\r\n                )\r\n                : (<CharacterCard data={data} />)}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ character }) => ({\r\n    loading: character.loading,\r\n    data: character.data,\r\n    error: character.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    requestCharacter: actions.requestCharacter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Character);\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport CharacterList from 'components/characterList';\r\nimport Character from 'components/character';\r\nimport './index.scss';\r\n\r\nconst App = () => (\r\n    <div className='app' data-testid='app'>\r\n        <header className='header'>\r\n            <Link to='/' className='logo'>The Rick and Morty</Link>\r\n        </header>\r\n        <main className='main'>\r\n            <Switch>\r\n                <Route exact path='/' component={CharacterList} />\r\n                <Route exact path='/characters/:id' render={({ match: { params: { id } } }) => <Character id={id} />} />\r\n            </Switch>\r\n        </main>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","import {\r\n    put, call, takeLeading,\r\n} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { actions } from 'store/characterList';\r\n\r\nexport function* fetchCharacterListWorker({ payload }) {\r\n    try {\r\n        const result = yield call(axios.get, payload);\r\n        yield put(actions.requestCharacterListSuccess(result.data));\r\n    }\r\n    catch (e) {\r\n        yield put(actions.requestCharacterListError(e.toString()));\r\n    }\r\n}\r\n\r\nexport function* fetchCharacterListWatcher() {\r\n    yield takeLeading(actions.requestCharacterList.toString(), fetchCharacterListWorker);\r\n}\r\n","import {\r\n    put, call, takeLatest,\r\n} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { actions } from 'store/character';\r\n\r\nexport function* fetchCharacterWorker({ payload }) {\r\n    try {\r\n        const result = yield call(axios.get, payload);\r\n        yield put(actions.requestCharacterSuccess(result.data));\r\n    }\r\n    catch (e) {\r\n        yield put(actions.requestCharacterError(e.toString()));\r\n    }\r\n}\r\n\r\nexport function* fetchCharacterWatcher() {\r\n    yield takeLatest(actions.requestCharacter.toString(), fetchCharacterWorker);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { fetchCharacterListWatcher } from './characterList/sagas';\r\nimport { fetchCharacterWatcher } from './character/sagas';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fetchCharacterListWatcher(),\r\n        fetchCharacterWatcher(),\r\n    ]);\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport characterList from './characterList';\r\nimport character from './character';\r\n\r\nexport default combineReducers({\r\n    characterList,\r\n    character,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './saga';\r\nimport rootReducer from './reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [...getDefaultMiddleware(), sagaMiddleware];\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from 'components/app';\r\nimport store from 'store';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter basename='/cartoon'>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}